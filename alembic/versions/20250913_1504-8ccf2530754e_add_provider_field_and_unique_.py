"""Add provider field and unique constraint on provider_social_id

Revision ID: 8ccf2530754e
Revises: 40893359ccb6
Create Date: 2025-09-13 15:04:25.615201+09:00

"""

from typing import Sequence, Union

import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import mysql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "8ccf2530754e"
down_revision: Union[str, Sequence[str], None] = "40893359ccb6"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("user", sa.Column("provider", sqlmodel.sql.sqltypes.AutoString(), nullable=False))
    op.alter_column(
        "user",
        "phone",
        existing_type=mysql.VARCHAR(length=20),
        type_=sqlmodel.sql.sqltypes.AutoString(),
        existing_nullable=False,
    )
    op.drop_index(op.f("uq_user_social_id"), table_name="user")
    op.create_unique_constraint(None, "user", ["provider", "social_id"])
    op.drop_constraint("user_consent_ibfk_1", "user_consent", type_="foreignkey")
    op.create_foreign_key(None, "user_consent", "user", ["user_id"], ["id"], ondelete="CASCADE")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "user_consent", type_="foreignkey")
    op.create_foreign_key("user_consent_ibfk_1", "user_consent", "user", ["user_id"], ["id"], ondelete="CASCADE")
    op.drop_constraint(None, "user", type_="unique")
    op.create_index(op.f("uq_user_social_id"), "user", ["social_id"], unique=True)
    op.alter_column(
        "user",
        "phone",
        existing_type=sqlmodel.sql.sqltypes.AutoString(),
        type_=mysql.VARCHAR(length=20),
        existing_nullable=False,
    )
    op.drop_column("user", "provider")
    # ### end Alembic commands ###
