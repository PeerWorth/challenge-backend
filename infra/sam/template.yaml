AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Challenge Backend API - FastAPI Lambda 배포

Globals:
  Function:
    Timeout: 30
    MemorySize: 512
    Runtime: python3.12
    Architectures: [x86_64]

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - prod
    Description: 환경 구분 (dev/prod)

Resources:
  # Python 의존성 Layer
  DependenciesLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: !Sub challenge-backend-${Environment}-dependencies
      Description: Python dependencies for Challenge Backend
      ContentUri: ../layers/dependencies/
      CompatibleRuntimes:
        - python3.12
      CompatibleArchitectures:
        - x86_64
    Metadata:
      BuildMethod: python3.12

  ApiGateway:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: $default
      CorsConfiguration:
        AllowOrigins:
          - "*"
        AllowMethods:
          - "*"
        AllowHeaders:
          - "*"

  ServerAPIFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub challenge-backend-${Environment}
      CodeUri: ../../
      Handler: main.handler
      Description: Challenge Backend 애플리케이션
      Layers:
        - !Ref DependenciesLayer
      Environment:
        Variables:
          # Parameter Store에서 가져오는 일반 설정값
          ENVIRONMENT: !Sub "{{resolve:ssm:/challenge/${Environment}/app/environment}}"
          PROJECT_NAME: !Sub "{{resolve:ssm:/challenge/${Environment}/app/project_name}}"
          JWT_ALGORITHM: !Sub "{{resolve:ssm:/challenge/${Environment}/app/jwt_algorithm}}"
          S3_BUCKET_NAME: !Sub "{{resolve:ssm:/challenge/${Environment}/app/s3_bucket_name}}"
          AWS_REGION: !Sub "{{resolve:ssm:/challenge/${Environment}/app/aws_region}}"

          # Database 연결 정보 (비민감 정보는 Parameter Store)
          DB_HOST: !Sub "{{resolve:ssm:/challenge/${Environment}/db/host}}"
          DB_PORT: !Sub "{{resolve:ssm:/challenge/${Environment}/db/port}}"
          DB_NAME: !Sub "{{resolve:ssm:/challenge/${Environment}/db/database}}"
          DB_USER: !Sub "{{resolve:ssm:/challenge/${Environment}/db/username}}"

          # Secrets Manager에서 가져오는 민감 정보
          JWT_SECRET: !Sub "{{resolve:secretsmanager:challenge-${Environment}-jwt:SecretString:JWT_SECRET}}"
          DB_PASSWORD: !Sub "{{resolve:secretsmanager:challenge-${Environment}-db:SecretString:password}}"

          # 환경별 MySQL URL (완성된 연결 문자열)
          DEV_MYSQL_URL: !If
            - IsDevEnvironment
            - !Sub "{{resolve:secretsmanager:challenge-${Environment}-db:SecretString:mysql_url}}"
            - !Ref "AWS::NoValue"
          PROD_MYSQL_URL: !If
            - IsProdEnvironment
            - !Sub "{{resolve:secretsmanager:challenge-${Environment}-db:SecretString:mysql_url}}"
            - !Ref "AWS::NoValue"
      Events:
        ApiEvent:
          Type: HttpApi
          Properties:
            ApiId: !Ref ApiGateway
            Path: /{proxy+}
            Method: ANY
        RootApiEvent:
          Type: HttpApi
          Properties:
            ApiId: !Ref ApiGateway
            Path: /
            Method: ANY
    Metadata:
      BuildMethod: python3.12
      BuildProperties:
        use_container: false
        skip_dependencies: true

Conditions:
  IsDevEnvironment: !Equals [!Ref Environment, "dev"]
  IsProdEnvironment: !Equals [!Ref Environment, "prod"]

Outputs:
  ApiUrl:
    Description: API Gateway 엔드포인트 URL
    Value: !Sub https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com
